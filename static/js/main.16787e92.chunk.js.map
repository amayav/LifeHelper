{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Table","columns","data","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","PERFECT_SUPPORT_3","PERFECT_SUPPORT_2","PERFECT_SUPPORT_1","DAMAGE_GUARD","SKILL_BOOST","ENCORE","CINDERELLA_MAGIC","skillTimes","Idol","props","handleListBoxNameChange","e","changeName","id","target","value","handleInputBoxIntervalChange","changeInterval","Number","handleListBoxTimeChange","changeTime","bind","name","this","onChange","skill","type","min","placeholder","interval","time","React","Component","Idols","last_activated_skill_id","current_encore_id_list","idolsData","idol1","idol2","idol3","idol4","idol5","start","perfect","guard","simple_timeline","mode","simple_start_time","simple_previous_mode","perfect_time","perfect_ratio","no_miss_time","no_miss_ratio","time_ratio","handleChangeMusicTime","new_music_time","setState","music_time","update","state","skills","is_resonance","default_skill","current_time","new_mode","simple_end_time","push","toFixed","being_activated_skills_name","is_just_activated","is_activated","j","is_perfect","includes","total_perfect_support_count","filter","length","is_guard","change_simple_mode","display_strings","timeList","Array","_i","startTime","updateTimeLine","new_skills","handleChange","new_is_resonance","checked","CenterList","CheckBoxTemplate","CheckBox","item","index","htmlFor","Header","accessor","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16787e92.chunk.js","sourcesContent":["//import React, {useMemo, useState} from 'react';\nimport React from 'react';\nimport { useTable, Column } from 'react-table';\n//import logo from './logo.svg';\nimport './App.css';\n\nexport interface IdolsData {\n  idol1: any;\n  idol2: any;\n  idol3: any;\n  idol4: any;\n  idol5: any;\n}\nexport interface Data {\n  start: string;\n  idol1: string;\n  idol2: string;\n  idol3: string;\n  idol4: string;\n  idol5: string;\n  perfect: string;\n  guard: string;\n}\n\nexport interface SimpleData {\n  start: string;\n  time: string;\n  mode: string;\n}\n\nexport interface TimeRatioData {\n  perfect_time: string;\n  perfect_ratio: string;\n  no_miss_time: string;\n  no_miss_ratio: string;\n}\n\nfunction Table ({ columns, data } : { columns: Column<any>[], data: any[] } ) : any {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable<any>({ columns, data });\n\n  return(\n    <table {...getTableProps()}>\n    <thead>\n    {headerGroups.map(headerGroup => (\n      <tr {...headerGroup.getHeaderGroupProps()}>\n      {headerGroup.headers.map(column => (\n        <th {...column.getHeaderProps()}>\n        {column.render(\"Header\")}</th>\n      ))}\n      </tr>\n    ))}\n    </thead>\n    <tbody {...getTableBodyProps()}>\n    {rows.map((row, i) => {\n      prepareRow(row);\n      return (\n        <tr {...row.getRowProps()}>\n        {row.cells.map(cell => {\n          return (\n            <td {...cell.getCellProps()}>\n            {cell.render(\"Cell\")}</td>\n          )\n        })}\n        </tr>\n      );\n    })}\n    </tbody>\n    </table>\n  )\n}\n\nexport type Skill = {\n  name: string,\n  interval: number,\n  time: string\n}\n\ninterface Props {\n  skill: Skill,\n    id: number,\n    changeName: (id: number, time: string) => void\n    changeInterval: (id: number, interval: number) => void\n    changeTime: (id: number, time: string) => void\n}\nexport const PERFECT_SUPPORT_3=\"perfect_support_3\"\nexport const PERFECT_SUPPORT_2=\"perfect_support_2\"\nexport const PERFECT_SUPPORT_1=\"perfect_support_1\"\nexport const DAMAGE_GUARD=\"damage_guard\"\nexport const SKILL_BOOST=\"skill_boost\"\nexport const ENCORE=\"encore\"\nexport const CINDERELLA_MAGIC=\"cinderella_magic\"\nexport const OTHER=\"other\"\n\nlet skillTimes: { [key: string]: number } = {\n  'time_a': 3.0,\n  'time_b': 4.5,\n  'time_c': 6.0,\n  'time_d': 7.5,\n  'time_e': 9.0,\n};\n\nclass Idol extends React.Component<Props, {}> {\n  constructor(props: Props) {\n    super(props)\n    this.handleListBoxNameChange = this.handleListBoxNameChange.bind(this)\n    this.handleInputBoxIntervalChange = this.handleInputBoxIntervalChange.bind(this)\n    this.handleListBoxTimeChange = this.handleListBoxTimeChange.bind(this)\n  }\n\n  private handleListBoxNameChange = (e: React.ChangeEvent<HTMLSelectElement>) : any => {\n    this.props.changeName(this.props.id, e.target.value)\n  }\n\n  private handleInputBoxIntervalChange = (e: React.ChangeEvent<HTMLInputElement>) : any => {\n    this.props.changeInterval(this.props.id, Number(e.target.value))\n  }\n\n  private handleListBoxTimeChange = (e: React.ChangeEvent<HTMLSelectElement>) : any => {\n    this.props.changeTime(this.props.id, e.target.value)\n  }\n\n  render() {\n    return (\n      <>\n      <select name={`skill_name_${this.props.id}`} id={`skill_id_${this.props.id}`} onChange={this.handleListBoxNameChange} value={this.props.skill.name}>\n      <option value={PERFECT_SUPPORT_3}>SSR パーフェクトサポート</option>\n      <option value={PERFECT_SUPPORT_2}>SR パーフェクトサポート</option>\n      <option value={PERFECT_SUPPORT_1}>R パーフェクトサポート</option>\n      <option value={DAMAGE_GUARD}>ダメージガード</option>\n      <option value={SKILL_BOOST}>スキルブースト</option>\n      <option value={ENCORE}>アンコール</option>\n      <option value={CINDERELLA_MAGIC}>シンデレラマジック</option>\n      <option value={OTHER}>その他</option>\n      </select>\n\n      <input type=\"number\" id={`interval_id_${this.props.id}`} name={`interval_name_${this.props.id}`} min=\"1\" placeholder=\"4\" onChange={this.handleInputBoxIntervalChange} value={this.props.skill.interval}/>\n      秒ごと\n\n      <select name={`time_name_${this.props.id}`} id={`time_id_${this.props.id}`} onChange={this.handleListBoxTimeChange} value={this.props.skill.time}>\n      <option value=\"time_a\">一瞬の間</option>\n      <option value=\"time_b\">わずかな間</option>\n      <option value=\"time_c\">少しの間</option>\n      <option value=\"time_d\">しばらくの間</option>\n      <option value=\"time_e\">かなりの間</option>\n      </select>\n      </>\n      )\n  }\n}\n\nexport class Idols extends React.Component <{}, {skills: Skill[], music_time: number, is_resonance: boolean}> {\n  constructor(props: any) {\n    super(props)\n    const default_skill : Skill = {\n      name: PERFECT_SUPPORT_3,\n      interval: 8,\n      time: \"time_b\"\n    }\n    this.state = {\n      skills: [default_skill, default_skill, default_skill, default_skill, default_skill],\n      music_time: 120,\n      is_resonance: false,\n    }\n    this.changeName = this.changeName.bind(this)\n    this.changeInterval = this.changeInterval.bind(this)\n    this.changeTime = this.changeTime.bind(this)\n    this.handleChangeMusicTime = this.handleChangeMusicTime.bind(this)\n  }\n  last_activated_skill_id: number = -1\n  current_encore_id_list: number[] = [-1, -1, -1, -1, -1]\n\n  idolsData : IdolsData = { idol1:null, idol2:null, idol3:null, idol4:null, idol5:null, }\n\n  data : Data[] = [ {start: \"*\", idol1: \"*\", idol2:\"*\", idol3:\"*\", idol4:\"*\", idol5:\"*\", perfect:\"*\", guard:\"*\" } ]\n\n  simple_timeline: SimpleData[] = [{start: \"*\", time: \"*\", mode: \"*\"} ]\n  simple_start_time: number = 0.0\n  simple_previous_mode: string = \"\"\n  private getSimpleTimeLine(): SimpleData[] {\n    return this.simple_timeline\n  }\n\n  perfect_time: number = -1\n  private getPerfectTime(): number {\n    return this.perfect_time\n  }\n  perfect_ratio: number = -1\n  private getPerfectRatio(): number {\n    return this.perfect_ratio\n  }\n  no_miss_time: number = -1\n  private getNoMissTime(): number {\n    return this.no_miss_time\n  }\n  no_miss_ratio: number = -1\n  private getNoMissRatio(): number {\n    return this.no_miss_ratio\n  }\n  time_ratio: TimeRatioData[] = [{perfect_time: \"*\", perfect_ratio: \"*\", no_miss_time: \"*\", no_miss_ratio: \"*\"}]\n\n  private is_activated(current_time: number, skill: Skill, music_time: number): boolean {\n    /*\n     * skill is activated after skill interval\n     * skill isn't activated the last 3 (not includes just 3) seconds of music (time when the last note is)\n     */\n    return (\n      (current_time >= skill.interval) &&\n      (((current_time - skill.interval) % skill.interval) <= skillTimes[skill.time]) &&\n      ((current_time - ((current_time - skill.interval) % skill.interval)) <= (music_time - 3))\n    )\n  }\n\n  private is_just_activated(current_time: number, skill: Skill, music_time: number): boolean {\n    return (\n      (current_time >= skill.interval) &&\n      (((current_time - skill.interval) % skill.interval) === 0) &&\n      (current_time <= (music_time - 3))\n    )\n  }\n\n  private change_simple_mode(new_mode: string, simple_end_time: number): void {\n    if (this.simple_previous_mode === new_mode) {\n      /* continue current mode */\n      return\n    }\n    this.simple_timeline.push({\n      start: (this.simple_start_time.toFixed(1) + \" - \" + simple_end_time.toFixed(1)),\n      time: (simple_end_time - this.simple_start_time).toFixed(1),\n      mode: this.simple_previous_mode\n    });\n    this.simple_previous_mode = new_mode\n    this.simple_start_time = simple_end_time;\n  }\n\n  private updateTimeLine(current_time: number, skills: Skill[], music_time: number, is_resonance: boolean) : Data {\n    let being_activated_skills_name: string[] = []\n\n    /* define skill which encore uses */\n    for (let i=4; i>=0; i--) {\n      if ((skills[i].name === ENCORE) &&\n        (this.is_just_activated(current_time, skills[i], music_time)) &&\n        (this.last_activated_skill_id !== -1)) {\n        this.current_encore_id_list[i] = this.last_activated_skill_id\n      }\n    }\n\n    /* listing up activated skills and lastly activated skill*/\n    for (let i=4; i>=0; i--) {\n      if (!this.is_activated(current_time, skills[i], music_time)) {\n        continue\n      }\n      if (skills[i].name === ENCORE) {\n        // at least one skill other than encore should be activated\n        if (this.current_encore_id_list[i] === -1) {\n          continue\n        }\n        if ((skills[this.current_encore_id_list[i]].name) === CINDERELLA_MAGIC) {\n          for (let j=4; j>=0; j--) {\n            being_activated_skills_name.push(skills[j].name)\n          }\n        } else {\n          being_activated_skills_name.push(skills[this.current_encore_id_list[i]].name)\n        }\n      } else {\n        if (skills[i].name === CINDERELLA_MAGIC) {\n          for (let j=4; j>=0; j--) {\n            being_activated_skills_name.push(skills[j].name)\n          }\n        } else {\n          being_activated_skills_name.push(skills[i].name)\n        }\n        /* calculate the last activated skill's id for the next 0.5 sec */\n        /* encore does not copy the skills activated at the same time */\n        if (this.is_just_activated(current_time, skills[i], music_time)) {\n          this.last_activated_skill_id = i\n        }\n      }\n    }\n\n    let is_perfect: boolean = false\n    if (is_resonance === false) {\n      is_perfect = being_activated_skills_name.includes(PERFECT_SUPPORT_3) &&\n        being_activated_skills_name.includes(SKILL_BOOST)\n    } else {\n      const perfect_support_3_count: number =\n        (being_activated_skills_name.filter(name => name === PERFECT_SUPPORT_3)).length\n      const perfect_support_2_count: number =\n        (being_activated_skills_name.filter(name => name === PERFECT_SUPPORT_2)).length\n      const perfect_support_1_count: number =\n        (being_activated_skills_name.filter(name => name === PERFECT_SUPPORT_1)).length\n\n      let total_perfect_support_count: number =\n        perfect_support_3_count*3 + perfect_support_2_count*2 + perfect_support_1_count*1\n      if (total_perfect_support_count > 0) {\n        const skill_boost_count: number = (being_activated_skills_name.filter(name => name === SKILL_BOOST)).length\n        total_perfect_support_count += skill_boost_count\n      }\n      is_perfect = (total_perfect_support_count >= 4)\n    }\n\n    const is_guard: boolean = being_activated_skills_name.includes(DAMAGE_GUARD)\n\n    if (is_perfect === true) {\n      /* change to perfect mode */\n      this.change_simple_mode(\"p\", current_time)\n      this.perfect_time += 0.5\n      this.no_miss_time += 0.5\n    } else if (is_guard === true) {\n      /* change to guard mode */\n      this.change_simple_mode(\"g\", current_time)\n      this.no_miss_time += 0.5\n    } else {\n      /* change to miss mode */\n      this.change_simple_mode(\"\", current_time)\n    }\n    /* process at the end of music time is out of this function */\n\n    let display_strings: string[] = []\n    for (let id=0; id<5; id++) {\n      if (\n        (! this.is_activated(current_time, skills[id], music_time)) ||\n        (\n          // encore doesn't activate if no other skills have been activated\n          (skills[id].name === ENCORE) &&\n          (this.current_encore_id_list[id] === -1)\n        )\n      ) {\n        display_strings[id] = \"\"\n        continue\n      }\n      if (\n        (skills[id].name === CINDERELLA_MAGIC) ||\n        (\n          (skills[id].name === ENCORE) &&\n          (skills[this.current_encore_id_list[id]].name === CINDERELLA_MAGIC)\n        )\n      ) {\n        display_strings[id] = \"12345\"\n        continue\n      }\n      if (skills[id].name === ENCORE) {\n        display_strings[id] = (this.current_encore_id_list[id] + 1).toFixed(0)\n        continue\n      }\n      display_strings[id] = (id + 1).toFixed(0)\n    }\n\n    return {\n      start: current_time.toFixed(1) + \" - \" + (current_time + 0.5).toFixed(1),\n      idol1: display_strings[0],\n      idol2: display_strings[1],\n      idol3: display_strings[2],\n      idol4: display_strings[3],\n      idol5: display_strings[4],\n      perfect: is_perfect ? \"p\" : \"-\",\n      guard: is_guard ? \"g\" : \"-\",\n    }\n  };\n\n  private update (skills: Skill[], music_time: number, is_resonance: boolean): void {\n    this.last_activated_skill_id = -1\n    this.current_encore_id_list = [-1, -1, -1, -1, -1]\n\n    this.simple_timeline = []\n    this.simple_start_time = 0.0\n    this.simple_previous_mode = \"\"\n\n    this.perfect_time = 0\n    this.perfect_ratio = 0\n    this.no_miss_time = 0\n    this.no_miss_ratio = 0\n\n    const timeList : number[] = [...Array(music_time*2)].map((_i, i) => i/2)\n\n    this.data = timeList.map(startTime => {\n      return this.updateTimeLine(startTime, skills, music_time, is_resonance)\n    })\n\n    this.simple_timeline.push({\n      start: this.simple_start_time.toFixed(1) + \" - \" + music_time.toFixed(1),\n      time: (music_time - this.simple_start_time).toFixed(1),\n      mode: this.simple_previous_mode\n    })\n\n    this.perfect_ratio = this.perfect_time / music_time * 100\n    this.no_miss_ratio = this.no_miss_time / music_time * 100\n\n    this.time_ratio = [{\n      perfect_time: this.perfect_time.toFixed(1),\n      perfect_ratio: this.perfect_ratio.toFixed(1),\n      no_miss_time: this.no_miss_time.toFixed(1),\n      no_miss_ratio: this.no_miss_ratio.toFixed(1)\n    }]\n  }\n\n  private changeName (id: number, name: string) {\n    let new_skills : Skill[] = this.state.skills\n    new_skills[id-1] = {...this.state.skills[id-1], name: name}\n    this.setState({skills: new_skills})\n    this.update(new_skills, this.state.music_time, this.state.is_resonance)\n  }\n\n  private changeInterval (id: number, interval: number): void {\n    let new_skills : Skill[] = this.state.skills\n    new_skills[id-1] = {...this.state.skills[id-1], interval: interval}\n    this.setState({skills: new_skills})\n    this.update(new_skills, this.state.music_time, this.state.is_resonance)\n  }\n\n  private changeTime (id: number, time: string): void {\n    let new_skills : Skill[] = this.state.skills\n    new_skills[id-1] = {...this.state.skills[id-1], time: time}\n    this.setState({skills: new_skills})\n    this.update(new_skills, this.state.music_time, this.state.is_resonance)\n  }\n\n  private handleChangeMusicTime = (e: React.ChangeEvent<HTMLInputElement>) : void => {\n    let new_music_time: number = Number(e.target.value)\n    this.setState({music_time: new_music_time})\n    this.update(this.state.skills, new_music_time, this.state.is_resonance)\n  }\n\n  render() {\n    const idolColumns : Column<IdolsData>[] = [\n        { Header: \"アイドル4特技\", accessor: \"idol4\" },\n        { Header: \"アイドル2特技\", accessor: \"idol2\" },\n        { Header: \"アイドル1特技\", accessor: \"idol1\" },\n        { Header: \"アイドル3特技\", accessor: \"idol3\" },\n        { Header: \"アイドル5特技\", accessor: \"idol5\" },\n      ]\n    const columns : Column<Data>[] = [\n        { Header: \"経過時間（秒）\", accessor: \"start\" },\n        { Header: \"4\", accessor: \"idol4\" },\n        { Header: \"2\", accessor: \"idol2\" },\n        { Header: \"1\", accessor: \"idol1\" },\n        { Header: \"3\", accessor: \"idol3\" },\n        { Header: \"5\", accessor: \"idol5\" },\n        { Header: \"PERFECT\", accessor: \"perfect\" },\n        { Header: \"GUARD\", accessor: \"guard\" },\n      ]\n    const simple_columns : Column<SimpleData>[] = [\n        { Header: \"経過時間（秒）\", accessor: \"start\" },\n        { Header: \"判定\", accessor: \"mode\" },\n        { Header: \"継続時間（秒）\", accessor: \"time\" },\n      ]\n    const time_ratio_columns : Column<TimeRatioData>[] = [\n        { Header: \"PERFECT 時間（秒）\", accessor: \"perfect_time\" },\n        { Header: \"PERFECT 率（%）\", accessor: \"perfect_ratio\" },\n        { Header: \"NO MISS 時間（秒）\", accessor: \"no_miss_time\" },\n        { Header: \"NO MISS 率（%）\", accessor: \"no_miss_ratio\" },\n      ]\n    this.idolsData = \n      {\n        idol1: <Idol skill={this.state.skills[0]} id={1} changeName={this.changeName} changeInterval={this.changeInterval} changeTime={this.changeTime}/>,\n        idol2: <Idol skill={this.state.skills[1]} id={2} changeName={this.changeName} changeInterval={this.changeInterval} changeTime={this.changeTime}/>,\n        idol3: <Idol skill={this.state.skills[2]} id={3} changeName={this.changeName} changeInterval={this.changeInterval} changeTime={this.changeTime}/>,\n        idol4: <Idol skill={this.state.skills[3]} id={4} changeName={this.changeName} changeInterval={this.changeInterval} changeTime={this.changeTime}/>,\n        idol5: <Idol skill={this.state.skills[4]} id={5} changeName={this.changeName} changeInterval={this.changeInterval} changeTime={this.changeTime}/>,\n      }\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const new_is_resonance: boolean = e.target.checked\n      this.setState({is_resonance: new_is_resonance})\n      this.update(this.state.skills, this.state.music_time, new_is_resonance)\n    };\n\n    const CenterList : string[] = [\n      \"センター効果 レゾナンス・XXX 有効？\",\n    ]\n\n    const CheckBoxTemplate = ({ id, value, checked = false, onChange } : {id: string, value: string, checked: boolean, onChange: any}) => {\n      return (\n        <input\n        type=\"checkbox\"\n        id={id}\n        name=\"center\"\n        checked={checked}\n        onChange={onChange}\n        value={value}\n        />\n      )\n    }\n    const CheckBox = () => {\n      return (\n        <>\n        {CenterList.map((item, index) => {\n          index = index + 1\n          return (\n            <>\n            <label htmlFor=\"resonance\">{item}</label>\n            <CheckBoxTemplate\n            id={`center_id_${index}`}\n            value={item}\n            onChange={handleChange}\n            checked={this.state.is_resonance}\n            />\n            </>\n          )\n        })}\n        </>\n      )\n    }\n\n    return (\n      <p>\n      {CenterList.map((item, index) => {\n        index = index + 1\n        return (\n          <>\n          <CheckBox />\n          </>\n        )\n      })}\n      <Table columns={idolColumns} data={[this.idolsData]}/>\n      楽曲時間（残り3秒未満になると特技が発動しない）：\n      <input\n      type=\"number\"\n      id=\"music_time\"\n      name=\"music_time\"\n      onChange={this.handleChangeMusicTime}\n      value={this.state.music_time}\n      />\n      秒\n      {/*checked={checked}*/}\n      {/*<div className=\"tables\">*/}\n      <div>\n        <Table columns={time_ratio_columns} data={this.time_ratio}/>\n      </div>\n      <div className=\"table simple\">\n        <label>簡易時系列\n          <Table columns={simple_columns} data={this.simple_timeline}/>\n        </label>\n      </div>\n      <div className=\"table detailed\">\n        <label>詳細時系列\n          <Table columns={columns} data={this.data}/>\n        </label>\n      </div>\n      {/*</div>*/}\n      </p>\n    )\n  }\n}\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n    <div>\n    {<p>アイドルマスター スターリットシーズン好評発売中！</p>}\n    {<p>使ったらシンデレラガールズ総選挙で小早川紗枝に投票しますよね</p>}\n    </div>\n    <div>\n    {<p>チューニング は SR パーフェクトサポート と同じ</p>}\n    {<p>トリコロール・シンフォニー は スキルブースト と同じ</p>}\n    {<p>未対応：グランドライブ</p>}\n    </div>\n    <div>\n    {<p>挙動がおかしいと思ったり要望があったりしたらソースコードを自分でいじってね</p>}\n    {<p>ソースコードのライセンスは設けてないよ</p>}\n    </div>\n  {<Idols/>}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}